[{"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/index.tsx":"1","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Header.tsx":"2","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Logo.tsx":"3","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/App.tsx":"4","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Search.tsx":"5","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/UserMenu.tsx":"6","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Dropdown.tsx":"7","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Sidebar.tsx":"8","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/MainView.tsx":"9","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/PostOptions.tsx":"10","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Contents.tsx":"11","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Post.tsx":"12","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Feed.tsx":"13","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Upvotes.tsx":"14","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/reportWebVitals.ts":"15","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/InfoCard.tsx":"16","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/CommunityStats.tsx":"17","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/CommunityCard.tsx":"18","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/CommunityLink.tsx":"19","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/RelatedCommunities.tsx":"20","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/SideCard.tsx":"21","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/LinkathonCard.tsx":"22"},{"size":500,"mtime":1607373908454,"results":"23","hashOfConfig":"24"},{"size":522,"mtime":1607467432154,"results":"25","hashOfConfig":"24"},{"size":585,"mtime":1607982514634,"results":"26","hashOfConfig":"24"},{"size":192,"mtime":1607392603871,"results":"27","hashOfConfig":"24"},{"size":575,"mtime":1607475115413,"results":"28","hashOfConfig":"24"},{"size":455,"mtime":1607471149817,"results":"29","hashOfConfig":"24"},{"size":1281,"mtime":1607476511342,"results":"30","hashOfConfig":"24"},{"size":1429,"mtime":1607982274134,"results":"31","hashOfConfig":"24"},{"size":1208,"mtime":1607717107646,"results":"32","hashOfConfig":"24"},{"size":1300,"mtime":1607895105499,"results":"33","hashOfConfig":"24"},{"size":790,"mtime":1607894753188,"results":"34","hashOfConfig":"24"},{"size":1029,"mtime":1607716240098,"results":"35","hashOfConfig":"24"},{"size":648,"mtime":1607716404537,"results":"36","hashOfConfig":"24"},{"size":946,"mtime":1607895225567,"results":"37","hashOfConfig":"24"},{"size":425,"mtime":1607373908454,"results":"38","hashOfConfig":"24"},{"size":351,"mtime":1607723358134,"results":"39","hashOfConfig":"24"},{"size":800,"mtime":1607727626981,"results":"40","hashOfConfig":"24"},{"size":952,"mtime":1607729046440,"results":"41","hashOfConfig":"24"},{"size":1276,"mtime":1607979586511,"results":"42","hashOfConfig":"24"},{"size":1762,"mtime":1607979444996,"results":"43","hashOfConfig":"24"},{"size":491,"mtime":1607723221648,"results":"44","hashOfConfig":"24"},{"size":1696,"mtime":1607980622028,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"q1vnhf",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/index.tsx",[],["92","93"],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Header.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Logo.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/App.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Search.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/UserMenu.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Dropdown.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Sidebar.tsx",["94","95"],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/MainView.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/PostOptions.tsx",["96"],"import { faComment, faEllipsisH, faSave, faShare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, {Component} from 'react';\nimport './MainView.css';\n\ninterface OptionsProps {numComments?: number}\ninterface OptionsState {}\n\nexport class PostOptions extends Component<OptionsProps, OptionsState> {\n    constructor(props: OptionsProps) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"optionsContainer\">\n                <div className=\"comments optionContainer\">\n                    <FontAwesomeIcon icon={faComment}/>\n                    <p className=\"commentText\">{this.props.numComments} Comments</p>\n                </div>\n                <div className=\"share optionIcon optionContainer\">\n                    <FontAwesomeIcon icon={faShare}/>\n                    <p className=\"share\"> Share</p>\n                </div>\n                <div className=\"save optionIcon optionContainer\">\n                    <FontAwesomeIcon icon={faSave}/>\n                    <p className=\"save\"> Save</p>\n\n                </div>\n                <div className=\"elipsis optionIcon\">\n                    <FontAwesomeIcon icon={faEllipsisH}/>\n                </div>\n            </div>\n        );\n    }\n}","/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Contents.tsx",["97"],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Post.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Feed.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/Upvotes.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/reportWebVitals.ts",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/InfoCard.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/CommunityStats.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/CommunityCard.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/CommunityLink.tsx",["98"],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/RelatedCommunities.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/SideCard.tsx",[],"/home/cambridge/Web/reddit_mockup/reddit_mockup/reddit_mockup/src/LinkathonCard.tsx",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":20,"nodeType":"105","messageId":"106","endLine":2,"endColumn":29},{"ruleId":"103","severity":1,"message":"107","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":18},{"ruleId":"108","severity":1,"message":"109","line":10,"column":5,"nodeType":"110","messageId":"111","endLine":12,"endColumn":6},{"ruleId":"112","severity":1,"message":"113","line":18,"column":23,"nodeType":"114","endLine":18,"endColumn":52},{"ruleId":"103","severity":1,"message":"115","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":17},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-unused-vars","'CardProps' is defined but never used.","Identifier","unusedVar","'InfoCard' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'faRobot' is defined but never used.","no-global-assign","no-unsafe-negation"]